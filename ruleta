<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Fortuna Mental</title>
  <style>
    body {
      background: white;
      margin: 0;
      padding: 0;
      font-family: sans-serif;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      height: 100vh;
    }
    h1 {
      margin-bottom: 20px;
    }
    canvas {
      max-width: 90vw;
      max-height: 90vw;
    }
    #result {
      font-size: 2em;
      margin-top: 20px;
    }
  </style>
</head>
<body>
  <h1>Fortuna Mental</h1>
  <canvas id="wheelCanvas" width="500" height="500"></canvas>
  <div id="result"></div>

  <script>
    const canvas = document.getElementById('wheelCanvas');
    const ctx = canvas.getContext('2d');
    const options = [
      { color: 'red', text: '+€50' },
      { color: 'black', text: '+€50' },
      { color: 'red', text: '-€50' },
      { color: 'black', text: '-€50' },
      { color: 'red', text: '+€50' },
      { color: 'black', text: '+€50' },
      { color: 'red', text: 'x2' },
      { color: 'black', text: 'x2' },
      { color: 'red', text: '+€50' },
      { color: 'black', text: '+€50' },
      { color: 'red', text: 'x0.5' },
      { color: 'black', text: 'x0.5' },
      { color: 'red', text: '+€50' },
      { color: 'black', text: '+€50' },
      { color: 'red', text: 'x0' },
      { color: 'black', text: 'x10' }
    ];

    const radius = canvas.width / 2;
    const anglePerSlice = (2 * Math.PI) / options.length;
    let currentAngle = 0;
    let spinning = false;

    function drawWheel() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);

      // Draw arrow on the right side
      ctx.fillStyle = 'black';
      ctx.beginPath();
      ctx.moveTo(canvas.width, radius);
      ctx.lineTo(canvas.width - 20, radius - 15);
      ctx.lineTo(canvas.width - 20, radius + 15);
      ctx.closePath();
      ctx.fill();

      options.forEach((option, index) => {
        const angle = currentAngle + index * anglePerSlice;

        // Draw slice
        ctx.beginPath();
        ctx.moveTo(radius, radius);
        ctx.arc(radius, radius, radius, angle, angle + anglePerSlice);
        ctx.fillStyle = option.color;
        ctx.fill();
        ctx.stroke();

        // Draw text
        ctx.save();
        ctx.translate(radius, radius);
        ctx.rotate(angle + anglePerSlice / 2);
        ctx.textAlign = 'right';
        ctx.fillStyle = 'white';
        ctx.font = '20px sans-serif';
        ctx.fillText(option.text, radius - 10, 10);
        ctx.restore();
      });
    }

    function spinWheel() {
      if (spinning) return;
      spinning = true;
      document.getElementById('result').textContent = '';

      const targetSlice = Math.floor(Math.random() * options.length);
      const targetAngle = ((options.length - targetSlice) * anglePerSlice + Math.PI / 2) % (2 * Math.PI);
      const currentRotation = currentAngle % (2 * Math.PI);
      let delta = targetAngle - currentRotation;
      if (delta < 0) delta += 2 * Math.PI;
      const extraSpins = 5 * 2 * Math.PI;
      const totalRotation = delta + extraSpins;

      let duration = 3000;
      const start = performance.now();

      function animate(time) {
        const elapsed = time - start;
        const progress = Math.min(elapsed / duration, 1);
        const eased = 1 - Math.pow(1 - progress, 3);
        currentAngle = totalRotation * eased;
        drawWheel();

        if (progress < 1) {
          requestAnimationFrame(animate);
        } else {
          spinning = false;
          const winner = options[targetSlice];
          document.getElementById('result').textContent = `Resultado: ${winner.color.toUpperCase()} ${winner.text}`;
        }
      }

      requestAnimationFrame(animate);
    }

    drawWheel();
    window.addEventListener('click', spinWheel);
  </script>
</body>
</html>
